{"version":3,"file":"commonHelpers2.js","sources":["../src/js/02-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\n\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst startBtn = document.querySelector(\"button[data-start]\");\nconst days = document.querySelector(\"span[data-days]\");\nconst hours = document.querySelector(\"span[data-hours]\");\nconst minutes = document.querySelector(\"span[data-minutes]\");\nconst seconds = document.querySelector(\"span[data-seconds]\");\n\nlet selectedDate;\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        selectedDate = selectedDates[0];\n\n        if (selectedDate < new Date()) {\n            window.alert(\"Please choose a date in the future\");\n            startBtn.disabled = true;\n            return;\n        }\n\n        startBtn.disabled = false;\n    },\n};\n\nflatpickr(\"input#datetime-picker\", options);\n\nstartBtn.disabled = true;\nstartBtn.addEventListener('click', () => {\n    startBtn.disabled = true;\n    const timer = setInterval(() => {\n        const remaining = displayTimeRemaining(selectedDate);\n        if (remaining < 1000) { // less then a second\n            clearInterval(timer);\n        }\n    }, 1000);\n});\n\nfunction displayTimeRemaining(targetDate) {\n    const remaining = targetDate.getTime() - Date.now();\n    const timeParts = convertMs(remaining);\n\n    days.textContent = addLeadingZero(timeParts.days);\n    hours.textContent = addLeadingZero(timeParts.hours);\n    minutes.textContent = addLeadingZero(timeParts.minutes);\n    seconds.textContent = addLeadingZero(timeParts.seconds);\n\n    return remaining;\n}\n\nfunction addLeadingZero(value) {\n    return (value + \"\").padStart(2, \"0\");\n}\n\nfunction convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}"],"names":["startBtn","days","hours","minutes","seconds","selectedDate","options","selectedDates","flatpickr","timer","displayTimeRemaining","targetDate","remaining","timeParts","convertMs","addLeadingZero","value","ms"],"mappings":"wIAIA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EACtDC,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAU,SAAS,cAAc,oBAAoB,EACrDC,EAAU,SAAS,cAAc,oBAAoB,EAE3D,IAAIC,EACJ,MAAMC,EAAU,CACZ,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAGnB,GAFAF,EAAeE,EAAc,CAAC,EAE1BF,EAAe,IAAI,KAAQ,CAC3B,OAAO,MAAM,oCAAoC,EACjDL,EAAS,SAAW,GACpB,MACH,CAEDA,EAAS,SAAW,EACvB,CACL,EAEAQ,EAAU,wBAAyBF,CAAO,EAE1CN,EAAS,SAAW,GACpBA,EAAS,iBAAiB,QAAS,IAAM,CACrCA,EAAS,SAAW,GACpB,MAAMS,EAAQ,YAAY,IAAM,CACVC,EAAqBL,CAAY,EACnC,KACZ,cAAcI,CAAK,CAE1B,EAAE,GAAI,CACX,CAAC,EAED,SAASC,EAAqBC,EAAY,CACtC,MAAMC,EAAYD,EAAW,QAAS,EAAG,KAAK,IAAG,EAC3CE,EAAYC,EAAUF,CAAS,EAErC,OAAAX,EAAK,YAAcc,EAAeF,EAAU,IAAI,EAChDX,EAAM,YAAca,EAAeF,EAAU,KAAK,EAClDV,EAAQ,YAAcY,EAAeF,EAAU,OAAO,EACtDT,EAAQ,YAAcW,EAAeF,EAAU,OAAO,EAE/CD,CACX,CAEA,SAASG,EAAeC,EAAO,CAC3B,OAAQA,EAAQ,IAAI,SAAS,EAAG,GAAG,CACvC,CAEA,SAASF,EAAUG,EAAI,CAQnB,MAAMhB,EAAO,KAAK,MAAMgB,EAAK,KAAG,EAE1Bf,EAAQ,KAAK,MAAOe,EAAK,MAAO,IAAI,EAEpCd,EAAU,KAAK,MAAQc,EAAK,MAAO,KAAQ,GAAM,EAEjDb,EAAU,KAAK,MAASa,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAhB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C"}